#!/usr/bin/env python

# check types. We could also allow for bools. Note:
# JSON                  Python
# ===================
# object                  dict
# array                   list
# string                  unicode
# number (int)    int, long
# number (real)   float
# true                    True
# false                   False
# null                    None

import json
import itertools

def read_json_file(filename):
    """ returns an array containing the content of the JSON file.

    keyword arguments:
    filename -- name of json file to interpret
    """
    with open(filename, "r") as file:
        return json.loads(file.read())


def list_multiply(l):
    ll = []
    for e in l:
        if (type(e) is int) | (type(e) is str):
            e = [e]
        ll.append(e)
    ret = []    
    for e in itertools.product(*ll):
        ret.append(list(e))
    return ret

a = [[1,2,3,4,5,6,7],[8,9]]
b = list_multiply(a)
c = [["float", "double", "quadruple"], [0,1]]
print(b)
d = list_multiply(c)
print(d)
